"""
Support code for running inside a virtualenv.

The graph generated by modulegraph2 contains nodes
as if the stdlib is loaded from the original location,
regardless of the tweaks virtualenv performs to
create a working environment
"""
import os
import sys

if hasattr(sys, "real_prefix"):
    virtual_lib = os.path.join(
        os.path.normpath(sys.prefix),
        "lib",
        f"python{sys.version_info[0]}.{sys.version_info[1]}",
    )
    site_packages = os.path.join(virtual_lib, "site-packages")

    # Running inside of a virtualenv environment
    def adjust_path(path: str) -> str:
        # Type annotation and comment are needed because Mypy
        # doesn't understand the additional attributes
        # introduced by virtualenv.
        real_prefix: str = sys.real_prefix  # type: ignore
        norm_path = os.path.normpath(path)

        if not norm_path.startswith(virtual_lib):
            return path

        if norm_path.startswith(site_packages):
            return path

        if os.path.islink(norm_path):
            return os.readlink(norm_path)

        elif os.path.islink(os.path.dirname(norm_path)):
            base = os.path.basename(norm_path)
            dirn = os.path.dirname(norm_path)
            dirn = os.readlink(dirn)
            return os.path.join(dirn, base)

        elif norm_path == os.path.join(virtual_lib, "site.py"):
            return os.path.join(
                real_prefix,
                "lib",
                f"python{sys.version_info[0]}.{sys.version_info[1]}",
                "site.py",
            )

        elif norm_path == os.path.join(virtual_lib, "distutils"):
            return os.path.join(
                real_prefix,
                "lib",
                f"python{sys.version_info[0]}.{sys.version_info[1]}",
                "distutils",
            )

        elif norm_path == os.path.join(virtual_lib, "distutils", "__init__.py"):
            return os.path.join(
                real_prefix,
                "lib",
                f"python{sys.version_info[0]}.{sys.version_info[1]}",
                "distutils",
                "__init__.py",
            )

        else:
            return path


else:  # pragma: nocover (tests run in virtualenv)

    # Running outside of a virtualenv environment
    def adjust_path(path: str) -> str:
        return path
